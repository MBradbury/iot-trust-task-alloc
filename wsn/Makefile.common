CONTIKI = $(CONTIKING_OSCORE_DIR)

ifeq ($(CONTIKI),)
    $(error "Contiki directory not set")
endif

# Include Contiki-NG Make variables
include $(CONTIKI)/Makefile.dir-variables

ifdef BUILD_NUMBER
    CFLAGS += -DBUILD_NUMBER=$(BUILD_NUMBER)
endif

CFLAGS += -g

#CFLAGS += -Wconversion
CFLAGS += -Wno-error=char-subscripts

# Add additional CFLAGS
CFLAGS += -DMQTT_CLIENT_CONF_LOG_LEVEL=LOG_LEVEL_DBG
CFLAGS += -DTRUST_MODEL_LOG_LEVEL=LOG_LEVEL_DBG
CFLAGS += -DAPP_MONITORING_LOG_LEVEL=LOG_LEVEL_DBG
CFLAGS += -DAPP_ROUTING_LOG_LEVEL=LOG_LEVEL_DBG
CFLAGS += -DAPP_CHALLENGE_RESPONSE_LOG_LEVEL=LOG_LEVEL_DBG
CFLAGS += -DCRYPTO_SUPPORT_LOG_LEVEL=LOG_LEVEL_DBG
CFLAGS += -DKEYSTORE_LOG_LEVEL=LOG_LEVEL_DBG

ifneq ($(OSCORE_MASTER_SALT),)
    $(info "Using master salt of $(OSCORE_MASTER_SALT)")
    CFLAGS += -DOSCORE_MASTER_SALT="${OSCORE_MASTER_SALT}"
endif

ifneq ($(OSCORE_ID_CONTEXT),)
    $(info "Using id context of $(OSCORE_ID_CONTEXT)")
    CFLAGS += -DOSCORE_ID_CONTEXT="${OSCORE_ID_CONTEXT}"
endif

# Include common application modules
MODULES_REL += ../common ${addprefix ../common/,mqtt-over-coap trust trust/stereotypes crypto crypto/targets/$(TARGET)}

include ../common/nanocbor/Makefile.include

ifeq ($(MAKE_WITH_PCAP),1)
    MAKE_NET_WITH_PCAP=1
    MODULES_REL += ../common/pcap
endif

# MQTT configuration
CFLAGS += -DTOPICS_TO_SUBSCRIBE_LEN=4

# CoAP configuration
MAKE_WITH_OSCORE = 1
MAKE_WITH_GROUPCOM = 1
MAKE_WITH_HW_CRYPTO = 1
MODULES += $(CONTIKI_NG_APP_LAYER_DIR)/coap
#MODULES_REL += ${addprefix ../common/tinydtls/cc2538/,sha2 ecc}

ifeq ($(TARGET),nrf52840)
    NRF52840_CRYPTO=1
    NRF52840_CRYPTO_BACKEND=cc310
    CFLAGS += -DNRF_CRYPTO_BACKEND_CC310_ECC_SECP256R1_ENABLED=1
    CFLAGS += -DNRF_CRYPTO_BACKEND_CC310_HASH_SHA256_ENABLED=1

    # Need to define this to prevent the SQK complaining
    CFLAGS += -DNRF_CRYPTO_BACKEND_CC310_BL_HASH_SHA256_ENABLED

    # Need to build using RTT so we can get serial output
    NRF52840_USE_RTT=1

    CFLAGS += -DSEGGER_RTT_MODE_DEFAULT=SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL
endif

# Set MAC protocol
#MAKE_MAC = MAKE_MAC_TSCH

CFLAGS += $(ADDITIONAL_CFLAGS) -DADDITIONAL_CFLAGS="\"$(ADDITIONAL_CFLAGS)\""
