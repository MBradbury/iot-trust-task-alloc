#pragma once
/*-------------------------------------------------------------------------------------------------------------------*/
#include "contiki.h"
#include "net/ipv6/uip.h"

#include "trust-model.h"
/*-------------------------------------------------------------------------------------------------------------------*/
#define PEER_LAST_SEEN_INVALID UINT32_MAX
/*-------------------------------------------------------------------------------------------------------------------*/
typedef struct peer
{
    struct peer *next;

    uip_ipaddr_t addr;

    // Time in peer's local clock (non-monotonic)
    uint32_t last_seen;

    peer_tm_t tm;

} peer_t;
/*-------------------------------------------------------------------------------------------------------------------*/
void peer_info_init(void);
/*-------------------------------------------------------------------------------------------------------------------*/
peer_t* peer_info_add(const uip_ipaddr_t* addr);
void peer_info_remove(peer_t* peer);
/*-------------------------------------------------------------------------------------------------------------------*/
peer_t* peer_info_find(const uip_ipaddr_t* addr);
/*-------------------------------------------------------------------------------------------------------------------*/
peer_t* peer_info_iter(void);
peer_t* peer_info_next(peer_t* iter);
/*-------------------------------------------------------------------------------------------------------------------*/
